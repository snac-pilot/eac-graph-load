// groovy / gremlin script to load EAC-CPF relations into a graph database

def env = System.getenv()

def database_path = env['GRAPH_DB'] ?: "./neo4j-db"

def graphML = env['GRAPH_ML'] ?: "./graph-snac-example.xml"

File src = new File(graphML)
if (!(src.exists()) ){ println graphML + " not found"; System.exit(1) }

// create graph
def g = new Neo4jGraph(database_path)

// define the index
indexKeys = new HashSet()
indexKeys.add("identity")
index = g.createAutomaticIndex('name-idx', Vertex.class, indexKeys)

// read the graphML file into the graph 
GraphMLReader.inputGraph(g, new FileInputStream(graphML))

println "manual indexes"

// created manual index for "related items" api
sourceEADurlIndex = g.createManualIndex('sourceEADurlIndex', Vertex.class)

// need to recreate indexes that graphML won't hold
for (z in g.V ) {
  co = z["creatorOf"]
  if (co) {
    co.tokenize("\n").each {
      sourceEADurlIndex.put("creatorOf", it, z) 
    }
  }
  ri = z["referencedIn"]
  if (ri) {
    ri.tokenize("\n").each {
      sourceEADurlIndex.put("referencedIn", it, z) 
    }
  }
}

g.shutdown()
